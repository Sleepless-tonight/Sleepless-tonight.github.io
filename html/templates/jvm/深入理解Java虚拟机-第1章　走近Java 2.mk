
### 前言
### 致谢
## 第一部分　走近Java

## 第1章　走近Java 2
世界上并没有完美的程序，但我们并不因此而沮丧，因为写程序本来就是一个不断追求完美的过
程。

### 1.1　概述 2
它实现了热点代码检测和运行时编译及优化，这使得Java应用能随着运行时间的增长而获得更高的性能；
### 1.2　Java技术体系 3

### 1.3　Java发展史 4
### 1.4　Java虚拟机家族 12
#### 1.4.1　虚拟机始祖：Sun Classic/Exact VM 12
#### 1.4.2　武林盟主：HotSpot VM 13
#### 1.4.3　小家碧玉：Mobile/Embedded VM 14
#### 1.4.4　天下第二：BEA JRockit/IBM J9 VM 15
#### 1.4.5　软硬合璧：BEA Liquid VM/Azul VM 16
#### 1.4.6　挑战者：Apache Harmony/Google Android Dalvik VM 17
#### 1.4.7　没有成功，但并非失败：Microsoft JVM及其他 18
#### 1.4.8　百家争鸣 19
### 1.5　展望Java技术的未来 21
#### 1.5.1　无语言倾向 21
#### 1.5.2　新一代即时编译器 23
#### 1.5.3　向Native迈进 24
#### 1.5.4　灵活的胖子 26
#### 1.5.5　语言语法持续增强 27
### 1.6　实战：自己编译JDK 29
#### 1.6.1　获取源码 29
#### 1.6.2　系统需求 31
#### 1.6.3　构建编译环境 33
#### 1.6.4　进行编译 34
#### 1.6.5　在IDE工具中进行源码调试 36
### 1.7　本章小结 39

