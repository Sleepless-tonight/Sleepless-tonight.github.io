<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.nostyling</groupId>
  <artifactId>springboot_create</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>springboot</name>
  <description>Demo project for Spring Boot</description>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.0.4.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <shiro.version>1.4.0</shiro.version>
    <ehcache.version>3.5.2</ehcache.version>
    <kaptcha.version>2.3.2</kaptcha.version>
    <mybatisplus.version>3.0.2</mybatisplus.version>


  </properties>


  <dependencies>
      <!--jsp支持-->
      <!-- servlet 依赖. -->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
      </dependency>
      <!-- spring boot 内置tomcat -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
      </dependency>
      <dependency>
          <groupId>org.apache.tomcat.embed</groupId>
          <artifactId>tomcat-embed-jasper</artifactId>
          <scope>provided</scope>
      </dependency>
      <!--jsp支持 结束-->
      <!-- servlet 依赖. 结束-->


    <!--<dependency>-->
      <!--<groupId>org.springframework.boot</groupId>-->
      <!--<artifactId>spring-boot-starter-data-jpa</artifactId>-->
    <!--</dependency>-->

      <!--添加redis依赖-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-data-redis</artifactId>
      </dependency>

      <!--shiro依赖-->
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-core</artifactId>
          <version>${shiro.version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>slf4j-api</artifactId>
                  <groupId>org.slf4j</groupId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-spring</artifactId>
          <version>${shiro.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.shiro</groupId>
          <artifactId>shiro-ehcache</artifactId>
          <version>${shiro.version}</version>
          <exclusions>
              <exclusion>
                  <artifactId>slf4j-api</artifactId>
                  <groupId>org.slf4j</groupId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.ehcache</groupId>
          <artifactId>ehcache</artifactId>
          <version>${ehcache.version}</version>
      </dependency>

      <!--   需要分布式session的话需要放开注释
      <dependency>
          <groupId>org.springframework.session</groupId>
          <artifactId>spring-session</artifactId>
      </dependency>
      -->

      <!-- 验证码-->
      <dependency>
          <groupId>com.github.penggle</groupId>
          <artifactId>kaptcha</artifactId>
          <version>${kaptcha.version}</version>
      </dependency>

      <!--添加MySql依赖-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>

      <!--添加MyBatis依赖-->
    <!--<dependency>-->
      <!--<groupId>org.mybatis.spring.boot</groupId>-->
      <!--<artifactId>mybatis-spring-boot-starter</artifactId>-->
      <!--<version>1.3.2</version>-->
    <!--</dependency>-->

      <!--添加 MyBatis-Plus 依赖-->
      <dependency>
          <groupId>com.baomidou</groupId>
          <artifactId>mybatis-plus-boot-starter</artifactId>
          <version>${mybatisplus.version}</version>
      </dependency>
      <!--<dependency>-->
          <!--<groupId>com.baomidou</groupId>-->
          <!--<artifactId>mybatis-plus</artifactId>-->
          <!--<version>${mybatisplus.version}</version>-->
      <!--</dependency>-->
      <dependency>
          <groupId>com.baomidou</groupId>
          <artifactId>mybatis-plus-generator</artifactId>
          <version>${mybatisplus.version}</version>
      </dependency>


      <!-- mybatisPlus代码生成模板引擎 -->
      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity</artifactId>
          <version>1.7</version>
      </dependency>

      <!-- Freemarker -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-freemarker</artifactId>
      </dependency>

      <!--测试REST服务-->
      <dependency>
          <groupId>com.jayway.restassured</groupId>
          <artifactId>rest-assured</artifactId>
          <version>2.9.0</version>
          <scope>test</scope>
      </dependency>

      <!-- fastjson阿里巴巴jSON处理器 -->
      <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>fastjson</artifactId>
          <version>1.2.49</version>
      </dependency>

      <!-- html 解析 -->
      <dependency>
          <groupId>org.jsoup</groupId>
          <artifactId>jsoup</artifactId>
          <version>1.11.3</version>
      </dependency>

      <!-- Quartz 任务调度 -->
      <dependency>
          <groupId>org.quartz-scheduler</groupId>
          <artifactId>quartz</artifactId>
      </dependency>

      <!--swagger -->
      <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-swagger2</artifactId>
          <version>2.9.2</version>
      </dependency>
      <dependency>
          <groupId>io.springfox</groupId>
          <artifactId>springfox-swagger-ui</artifactId>
          <version>2.9.2</version>
      </dependency>

      <!--添加kafka依赖-->
      <dependency>
          <groupId>org.springframework.kafka</groupId>
          <artifactId>spring-kafka</artifactId>
      </dependency>

      <!--添加JDBC依赖-->
      <!-- JDBC连接数据库，因为要用HikariCP，所以需要将SpringBoot中的tomcat-jdbc排除 -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-jdbc</artifactId>
      </dependency>

      <!-- alibaba的druid数据库连接池 -->
      <!--<dependency>-->
          <!--<groupId>com.alibaba</groupId>-->
          <!--<artifactId>druid-spring-boot-starter</artifactId>-->
          <!--<version>1.1.9</version>-->
      <!--</dependency>-->

      <!--HikariCP 是一个高性能，“零开销”，高品质的 JDBC 连接池-->
      <!--默认所以注销-->
      <!--<dependency>-->
          <!--<groupId>com.zaxxer</groupId>-->
          <!--<artifactId>HikariCP</artifactId>-->
      <!--</dependency>-->

      <!--  lang3 -->
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
          <!--<version>3.6</version>-->
      </dependency>

      <!--  Lombok -->
      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <!--<version>${lombok.version}</version>-->
          <scope>provided</scope>
      </dependency>

      <!-- ConfigurationProperties标签 -->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-configuration-processor</artifactId>
          <optional>true</optional>
      </dependency>

      <!--WEB支持-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
      </dependency>

    <!--核心模块，包括自动配置支持、日志和YAML；-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

      <!--测试模块，包括JUnit、Hamcrest、Mockito。-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-test</artifactId>
          <scope>test</scope>
      </dependency>

    <!--热启动支持-->
      <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
          <optional>true</optional>
      </dependency>

  </dependencies>

  <build>
    <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
                <fork>true</fork>
            </configuration>
        </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
              <fork>true</fork>
          </configuration>
      </plugin>
    </plugins>
      <resources>
          <resource>
              <directory>src/main/webapp</directory>
          </resource>
          <resource>
              <directory>src/main/resources</directory>
          </resource>
          <resource>
              <directory>src/main/java</directory>
              <includes>
                  <include>**/*.xml</include>
              </includes>
          </resource>
      </resources>
  </build>


</project>
